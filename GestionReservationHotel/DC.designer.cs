#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GestionReservationHotel
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ReservationHotel")]
	public partial class DCDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Définitions de méthodes d'extensibilité
    partial void OnCreated();
    partial void Insertclient(client instance);
    partial void Updateclient(client instance);
    partial void Deleteclient(client instance);
    partial void Inserthotel(hotel instance);
    partial void Updatehotel(hotel instance);
    partial void Deletehotel(hotel instance);
    partial void Insertreservation(reservation instance);
    partial void Updatereservation(reservation instance);
    partial void Deletereservation(reservation instance);
    partial void Insertchambre(chambre instance);
    partial void Updatechambre(chambre instance);
    partial void Deletechambre(chambre instance);
    #endregion
		
		public DCDataContext() : 
				base(global::GestionReservationHotel.Properties.Settings.Default.ReservationHotelConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DCDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DCDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DCDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DCDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<client> client
		{
			get
			{
				return this.GetTable<client>();
			}
		}
		
		public System.Data.Linq.Table<hotel> hotel
		{
			get
			{
				return this.GetTable<hotel>();
			}
		}
		
		public System.Data.Linq.Table<reservation> reservation
		{
			get
			{
				return this.GetTable<reservation>();
			}
		}
		
		public System.Data.Linq.Table<chambre> chambre
		{
			get
			{
				return this.GetTable<chambre>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.client")]
	public partial class client : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _idclient;
		
		private string _nomclient;
		
		private string _prenomclient;
		
		private System.Nullable<decimal> _telephone;
		
		private EntityRef<reservation> _reservation;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidclientChanging(decimal value);
    partial void OnidclientChanged();
    partial void OnnomclientChanging(string value);
    partial void OnnomclientChanged();
    partial void OnprenomclientChanging(string value);
    partial void OnprenomclientChanged();
    partial void OntelephoneChanging(System.Nullable<decimal> value);
    partial void OntelephoneChanged();
    #endregion
		
		public client()
		{
			this._reservation = default(EntityRef<reservation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idclient", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal idclient
		{
			get
			{
				return this._idclient;
			}
			set
			{
				if ((this._idclient != value))
				{
					this.OnidclientChanging(value);
					this.SendPropertyChanging();
					this._idclient = value;
					this.SendPropertyChanged("idclient");
					this.OnidclientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nomclient", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string nomclient
		{
			get
			{
				return this._nomclient;
			}
			set
			{
				if ((this._nomclient != value))
				{
					this.OnnomclientChanging(value);
					this.SendPropertyChanging();
					this._nomclient = value;
					this.SendPropertyChanged("nomclient");
					this.OnnomclientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prenomclient", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string prenomclient
		{
			get
			{
				return this._prenomclient;
			}
			set
			{
				if ((this._prenomclient != value))
				{
					this.OnprenomclientChanging(value);
					this.SendPropertyChanging();
					this._prenomclient = value;
					this.SendPropertyChanged("prenomclient");
					this.OnprenomclientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telephone", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> telephone
		{
			get
			{
				return this._telephone;
			}
			set
			{
				if ((this._telephone != value))
				{
					this.OntelephoneChanging(value);
					this.SendPropertyChanging();
					this._telephone = value;
					this.SendPropertyChanged("telephone");
					this.OntelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="client_reservation", Storage="_reservation", ThisKey="idclient", OtherKey="idreservation", IsUnique=true, IsForeignKey=false)]
		public reservation reservation
		{
			get
			{
				return this._reservation.Entity;
			}
			set
			{
				reservation previousValue = this._reservation.Entity;
				if (((previousValue != value) 
							|| (this._reservation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._reservation.Entity = null;
						previousValue.client = null;
					}
					this._reservation.Entity = value;
					if ((value != null))
					{
						value.client = this;
					}
					this.SendPropertyChanged("reservation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.hotel")]
	public partial class hotel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _idhotel;
		
		private string _nomhotel;
		
		private string _adresse;
		
		private EntitySet<chambre> _chambre;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidhotelChanging(decimal value);
    partial void OnidhotelChanged();
    partial void OnnomhotelChanging(string value);
    partial void OnnomhotelChanged();
    partial void OnadresseChanging(string value);
    partial void OnadresseChanged();
    #endregion
		
		public hotel()
		{
			this._chambre = new EntitySet<chambre>(new Action<chambre>(this.attach_chambre), new Action<chambre>(this.detach_chambre));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idhotel", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal idhotel
		{
			get
			{
				return this._idhotel;
			}
			set
			{
				if ((this._idhotel != value))
				{
					this.OnidhotelChanging(value);
					this.SendPropertyChanging();
					this._idhotel = value;
					this.SendPropertyChanged("idhotel");
					this.OnidhotelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nomhotel", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string nomhotel
		{
			get
			{
				return this._nomhotel;
			}
			set
			{
				if ((this._nomhotel != value))
				{
					this.OnnomhotelChanging(value);
					this.SendPropertyChanging();
					this._nomhotel = value;
					this.SendPropertyChanged("nomhotel");
					this.OnnomhotelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adresse", DbType="NVarChar(50)")]
		public string adresse
		{
			get
			{
				return this._adresse;
			}
			set
			{
				if ((this._adresse != value))
				{
					this.OnadresseChanging(value);
					this.SendPropertyChanging();
					this._adresse = value;
					this.SendPropertyChanged("adresse");
					this.OnadresseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="hotel_chambre", Storage="_chambre", ThisKey="idhotel", OtherKey="idhotel")]
		public EntitySet<chambre> chambre
		{
			get
			{
				return this._chambre;
			}
			set
			{
				this._chambre.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_chambre(chambre entity)
		{
			this.SendPropertyChanging();
			entity.hotel = this;
		}
		
		private void detach_chambre(chambre entity)
		{
			this.SendPropertyChanging();
			entity.hotel = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.reservation")]
	public partial class reservation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _idreservation;
		
		private System.DateTime _debutreservation;
		
		private System.Nullable<System.DateTime> _finreservation;
		
		private System.Nullable<double> _montant;
		
		private decimal _idclient;
		
		private decimal _idchambre;
		
		private EntityRef<client> _client;
		
		private EntityRef<chambre> _chambre;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidreservationChanging(decimal value);
    partial void OnidreservationChanged();
    partial void OndebutreservationChanging(System.DateTime value);
    partial void OndebutreservationChanged();
    partial void OnfinreservationChanging(System.Nullable<System.DateTime> value);
    partial void OnfinreservationChanged();
    partial void OnmontantChanging(System.Nullable<double> value);
    partial void OnmontantChanged();
    partial void OnidclientChanging(decimal value);
    partial void OnidclientChanged();
    partial void OnidchambreChanging(decimal value);
    partial void OnidchambreChanged();
    #endregion
		
		public reservation()
		{
			this._client = default(EntityRef<client>);
			this._chambre = default(EntityRef<chambre>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idreservation", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal idreservation
		{
			get
			{
				return this._idreservation;
			}
			set
			{
				if ((this._idreservation != value))
				{
					if ((this._client.HasLoadedOrAssignedValue || this._chambre.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidreservationChanging(value);
					this.SendPropertyChanging();
					this._idreservation = value;
					this.SendPropertyChanged("idreservation");
					this.OnidreservationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_debutreservation", DbType="DateTime NOT NULL")]
		public System.DateTime debutreservation
		{
			get
			{
				return this._debutreservation;
			}
			set
			{
				if ((this._debutreservation != value))
				{
					this.OndebutreservationChanging(value);
					this.SendPropertyChanging();
					this._debutreservation = value;
					this.SendPropertyChanged("debutreservation");
					this.OndebutreservationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_finreservation", DbType="DateTime")]
		public System.Nullable<System.DateTime> finreservation
		{
			get
			{
				return this._finreservation;
			}
			set
			{
				if ((this._finreservation != value))
				{
					this.OnfinreservationChanging(value);
					this.SendPropertyChanging();
					this._finreservation = value;
					this.SendPropertyChanged("finreservation");
					this.OnfinreservationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_montant", DbType="Float")]
		public System.Nullable<double> montant
		{
			get
			{
				return this._montant;
			}
			set
			{
				if ((this._montant != value))
				{
					this.OnmontantChanging(value);
					this.SendPropertyChanging();
					this._montant = value;
					this.SendPropertyChanged("montant");
					this.OnmontantChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idclient", DbType="Decimal(18,0) NOT NULL")]
		public decimal idclient
		{
			get
			{
				return this._idclient;
			}
			set
			{
				if ((this._idclient != value))
				{
					this.OnidclientChanging(value);
					this.SendPropertyChanging();
					this._idclient = value;
					this.SendPropertyChanged("idclient");
					this.OnidclientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idchambre", DbType="Decimal(18,0) NOT NULL")]
		public decimal idchambre
		{
			get
			{
				return this._idchambre;
			}
			set
			{
				if ((this._idchambre != value))
				{
					this.OnidchambreChanging(value);
					this.SendPropertyChanging();
					this._idchambre = value;
					this.SendPropertyChanged("idchambre");
					this.OnidchambreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="client_reservation", Storage="_client", ThisKey="idreservation", OtherKey="idclient", IsForeignKey=true)]
		public client client
		{
			get
			{
				return this._client.Entity;
			}
			set
			{
				client previousValue = this._client.Entity;
				if (((previousValue != value) 
							|| (this._client.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._client.Entity = null;
						previousValue.reservation = null;
					}
					this._client.Entity = value;
					if ((value != null))
					{
						value.reservation = this;
						this._idreservation = value.idclient;
					}
					else
					{
						this._idreservation = default(decimal);
					}
					this.SendPropertyChanged("client");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="chambre_reservation", Storage="_chambre", ThisKey="idreservation", OtherKey="idchambre", IsForeignKey=true)]
		public chambre chambre
		{
			get
			{
				return this._chambre.Entity;
			}
			set
			{
				chambre previousValue = this._chambre.Entity;
				if (((previousValue != value) 
							|| (this._chambre.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._chambre.Entity = null;
						previousValue.reservation = null;
					}
					this._chambre.Entity = value;
					if ((value != null))
					{
						value.reservation = this;
						this._idreservation = value.idchambre;
					}
					else
					{
						this._idreservation = default(decimal);
					}
					this.SendPropertyChanged("chambre");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.chambre")]
	public partial class chambre : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _idchambre;
		
		private string _etage;
		
		private string _typechambre;
		
		private decimal _idhotel;
		
		private System.Nullable<double> _prix;
		
		private EntityRef<reservation> _reservation;
		
		private EntityRef<hotel> _hotel;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidchambreChanging(decimal value);
    partial void OnidchambreChanged();
    partial void OnetageChanging(string value);
    partial void OnetageChanged();
    partial void OntypechambreChanging(string value);
    partial void OntypechambreChanged();
    partial void OnidhotelChanging(decimal value);
    partial void OnidhotelChanged();
    partial void OnprixChanging(System.Nullable<double> value);
    partial void OnprixChanged();
    #endregion
		
		public chambre()
		{
			this._reservation = default(EntityRef<reservation>);
			this._hotel = default(EntityRef<hotel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idchambre", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal idchambre
		{
			get
			{
				return this._idchambre;
			}
			set
			{
				if ((this._idchambre != value))
				{
					this.OnidchambreChanging(value);
					this.SendPropertyChanging();
					this._idchambre = value;
					this.SendPropertyChanged("idchambre");
					this.OnidchambreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_etage", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string etage
		{
			get
			{
				return this._etage;
			}
			set
			{
				if ((this._etage != value))
				{
					this.OnetageChanging(value);
					this.SendPropertyChanging();
					this._etage = value;
					this.SendPropertyChanged("etage");
					this.OnetageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typechambre", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string typechambre
		{
			get
			{
				return this._typechambre;
			}
			set
			{
				if ((this._typechambre != value))
				{
					this.OntypechambreChanging(value);
					this.SendPropertyChanging();
					this._typechambre = value;
					this.SendPropertyChanged("typechambre");
					this.OntypechambreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idhotel", DbType="Decimal(18,0) NOT NULL")]
		public decimal idhotel
		{
			get
			{
				return this._idhotel;
			}
			set
			{
				if ((this._idhotel != value))
				{
					if (this._hotel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidhotelChanging(value);
					this.SendPropertyChanging();
					this._idhotel = value;
					this.SendPropertyChanged("idhotel");
					this.OnidhotelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prix", DbType="Float")]
		public System.Nullable<double> prix
		{
			get
			{
				return this._prix;
			}
			set
			{
				if ((this._prix != value))
				{
					this.OnprixChanging(value);
					this.SendPropertyChanging();
					this._prix = value;
					this.SendPropertyChanged("prix");
					this.OnprixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="chambre_reservation", Storage="_reservation", ThisKey="idchambre", OtherKey="idreservation", IsUnique=true, IsForeignKey=false)]
		public reservation reservation
		{
			get
			{
				return this._reservation.Entity;
			}
			set
			{
				reservation previousValue = this._reservation.Entity;
				if (((previousValue != value) 
							|| (this._reservation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._reservation.Entity = null;
						previousValue.chambre = null;
					}
					this._reservation.Entity = value;
					if ((value != null))
					{
						value.chambre = this;
					}
					this.SendPropertyChanged("reservation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="hotel_chambre", Storage="_hotel", ThisKey="idhotel", OtherKey="idhotel", IsForeignKey=true)]
		public hotel hotel
		{
			get
			{
				return this._hotel.Entity;
			}
			set
			{
				hotel previousValue = this._hotel.Entity;
				if (((previousValue != value) 
							|| (this._hotel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._hotel.Entity = null;
						previousValue.chambre.Remove(this);
					}
					this._hotel.Entity = value;
					if ((value != null))
					{
						value.chambre.Add(this);
						this._idhotel = value.idhotel;
					}
					else
					{
						this._idhotel = default(decimal);
					}
					this.SendPropertyChanged("hotel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
